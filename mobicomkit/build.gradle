apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "5.101.0"
        multiDexEnabled true
        consumerProguardFiles 'proguard-rules.txt'
    }
    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ECLIPSE_.SF'
        exclude 'META-INF/ECLIPSE_.RSA'
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
}

repositories {
    maven {
        url "https://repo.eclipse.org/content/repositories/paho-releases/"
    }
    mavenCentral()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api project(':mobicommons')

    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'androidx.work:work-runtime:2.5.0'
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //Tests
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'org.mockito:mockito-android:3.11.1'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    //androidTestImplementation 'androidx.test.ext:truth:1.3.0'
    androidTestImplementation 'com.google.truth:truth:1.0'
    //androidTestImplementation 'org.robolectric:robolectric:4.4'
}

//Release
/*
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false // add this line

    source = android.sourceSets.main.java.srcDirs
    //source = android.sourceSets.main.allJava
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId = 'com.applozic.communication.message'
            artifactId = project.getName()
            version = android.defaultConfig.versionName

            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            artifact(javadocJar)
            artifact(sourcesJar)

            //generate POM
            pom.withXml {
                def node = asNode()
                def dependenciesNode = node.appendNode('dependencies')
                def dependencies = { Dependency dep ->
                    if (dep.group == null || dep.name == null || dep.name == "unspecified") {
                        return
                    }

                    def dependencyGroup
                    if (dep.group == "Android-SDK-Dev") { //for the mobicommons dependency
                        dependencyGroup = 'com.applozic.mobiframework'
                    } else {
                        dependencyGroup = dep.group
                    }

                    def dependencyVersion
                    if (dep.version == "unspecified" || dep.version == null) { //for the mobicommmons dependency
                        dependencyVersion = version
                    } else {
                        dependencyVersion = dep.version
                    }

                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dependencyGroup)
                    dependencyNode.appendNode('artifactId', dep.name)
                    dependencyNode.appendNode('version', dependencyVersion)

                    if (!dep.transitive) {
                        // If this dependency is transitive, we should force exclude all its dependencies them from the POM
                        def exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                        exclusionNode.appendNode('groupId', '*')
                        exclusionNode.appendNode('artifactId', '*')
                    } else if (!dep.properties.excludeRules.empty) {
                        // Otherwise add specified exclude rules
                        def exclusionsNode = dependencyNode.appendNode('exclusions')
                        dep.properties.excludeRules.each { ExcludeRule rule ->
                            def exclusion = exclusionsNode.appendNode('exclusion')
                            exclusion.appendNode('groupId', rule.group ?: '*')
                            exclusion.appendNode('artifactId', rule.module ?: '*')
                        }
                    }
                }

                // List all dependencies and write to POM
                configurations.api.getAllDependencies().each dependencies
                configurations.implementation.getAllDependencies().each dependencies
            }
        }
    }
}

artifactoryPublish {
    publications(publishing.publications.aar)
}
*/

/*ext {
    // Where you will see your artifact in Bintray's web interface
    // The "bintrayName" should match the name of the Bintray repro.
    bintrayRepo = 'maven'
    bintrayName = 'applozic-communication-message'

    // Maven metadata
    publishedGroupId = 'com.applozic.communication.message'
    libraryName = 'mobicomkit'
    // Save yourself a head ache, and set this equal to the name of the Android Studio library
    // module. The artifact name needs to match the name of the library.
    artifact = 'mobicomkit'

    libraryDescription = 'Applozic Communication Chat/Messaging library'
    libraryVersion = '5.98'

    developerId = 'devashish'
    developerName = 'Applozic'
    developerEmail = 'devashish.mamgain@gmail.com'
}


apply from: 'https://raw.githubusercontent.com/attwellBrian/JCenter/master/installv1.gradle'
apply from: 'https://raw.githubusercontent.com/attwellBrian/JCenter/master/bintrayv1.gradle'*/


